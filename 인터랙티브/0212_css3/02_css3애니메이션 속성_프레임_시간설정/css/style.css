/*
	
	1. 애니메이션 속성
	2. 프레임
	3. 시간설정

*/

.box { width:200px; height:200px; background-color:yellowgreen; 
	
/*	transform: translate(300px,400px);*/
/*	position:relative; top:400px; left:300px; */
	/* 애니메이션 속성 */
	animation-name : name;
	animation-duration : 2s; /*지속시간*/
	animation-timing-function : linear; /*가속도 default ease*/
	animation-delay : 2s; /*지연시간*/
	animation-iteration-count : infinite; /*반복횟수*/
	animation-direction : /*alternate-reverse*/ alternate;
	animation-play-state : running;
	
	animation:name 2s linear 2s infinite alternate running;
}

.box:hover { animation-play-state : paused; }

.box2 { width:200px; height:200px; background-color:orange; 
	
	animation-name : name;
	animation-duration : 2s;
	/* 애니메이션은 원래 상태로 돌아가지만 fillmode를 사용할경우 설정을 할수 있다. ( 끝나는 프레임의 상태로 유지 시킬수 있다.) */
	animation-fill-mode : forwards;
}

@keyframes name {
	from { transform : translateX(0) rotate(0deg); border-radius:0; }
	to { transform : translateX(200px) rotate(360deg); border-radius:50%; }
}

/* 키프레임 */

.frame { width:200px; height:200px; background-color:yellowgreen; 

	/*프레임 확장해보기*/
	animation-name: open;
	animation-duration: 7s;
	animation-iteration-count: infinite;
}

@keyframes open {
	0% { transform: translateX(0); }
	40% { transform: translateX(0); }
	to { transform: translateX(200px); }
}

* { margin:0; padding:0; }
li { list-style:none; }

/*예제 스타일 적용*/

h1 { text-align:center; margin:50px 0 40px; }

.cake { width:920px; margin:0 auto; }
.cake li { float:left; width:200px; height:200px; overflow:hidden; border-radius:50%; margin:15px; }
.cake li img { width:100%; }

/* 애니메이션 */

h1 { animation:logo 2s; }

@keyframes logo {
	from { transform: translateY(-100px); }
	70% { transform: translateY(50px); }
	to { transform: translateY(0px); }
}

/*케익 애니메이션*/
.cake li { animation:cake 2s; }

@keyframes cake {
	0% { transform: scale(0); opacity:0; }
	20% { transform: scale(0.6); }
	40% { transform: scale(0.2); }
	60% { transform: scale(0.8); }
	80% { transform: scale(0.4) rotate(0deg); }
	100% { transform: scale(1) rotate(360deg); opacity:1; }
}


.nemo { width:100px; height:100px; background-color:crimson; 
	border-radius:50%; margin:20px; 
	opacity:0;
}

.nemo1 { animation:nemo 3s ease; animation-fill-mode:forwards; }
.nemo2 { animation:nemo 3s ease 1s; animation-fill-mode:forwards; }
.nemo3 { animation:nemo 3s ease 2s; animation-fill-mode:forwards; }

@keyframes nemo {
	from { opacity:0; }
	40% { opacity:1; transform:translateX(0px); }
	100% { opacity:1; transform:translateX(200px); }
}

/* 2번째 예제 */
.apple { position:absolute; top:50%; left:50%; 
	transform:translate(-50%,-50%);
	opacity:0;
	
	animation : apple 3s 1s;
}

@keyframes apple { 0%, 100% { opacity:1; } }

body { animation: bgColor 3s linear 5s forwards; }

@keyframes bgColor {
	0% { background-color:#fff; }
	100% { background-color:#000; }
}

/*스타일*/
.title { color:#fff; text-align:center; margin:40px 0 15px; font-size:24px; font-weight:bold; opacity:0; }
.desc { text-align:center; color:#6bf; opacity:0; }
.phone { text-align:center; margin-top:30px; opacity:0; }

/*기능*/
.title { animation: title 2s linear 9s forwards; }

@keyframes title { 
	0% { transform: translateY(-50px); opacity:0;  }
	100% { transform: translateY(0); opacity:1; }
}

.desc { animation: desc 2s linear 10s forwards; }

@keyframes desc { 
	0% { transform: translateX(-100px); opacity:0; }
	100% { transform: translateX(0); opacity:1; }
}

.phone { animation: phone 4s linear 12s forwards; }

@keyframes phone { 
	0% { transform: translateY(100px); opacity:0; }
	100% { transform: translateY(0); opacity:1; }
}


















